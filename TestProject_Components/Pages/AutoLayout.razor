@page "/auto_layout"
@page "/auto_layout/{layout}"
<SourceCodeLink Repository="Blazor.Diagrams" Page="@(nameof(AutoLayout))" />

<div style="display:grid; grid-template-rows: auto 1fr; height: 100%; grid-row-gap: 1em">
    <div style="grid-row: 1">
        <a href="auto_layout/@nameof(Algorithm.FastIncremental)">@nameof(Algorithm.FastIncremental)</a>
        <br />
        <a href="auto_layout/@nameof(Algorithm.MultiDimensionalScaling)">@nameof(Algorithm.MultiDimensionalScaling)</a>
        <br />
        <a href="auto_layout/@nameof(Algorithm.Ranking)">@nameof(Algorithm.Ranking)</a>
        <br />
        <a href="auto_layout/@nameof(Algorithm.Sugiyama)">@nameof(Algorithm.Sugiyama)</a>
    </div>

    @code {
        [Parameter] public string layout { set { Enum.TryParse<Algorithm>(value, out var v); if (v != Layout) { Layout = v; } } }
        Algorithm Layout { get; set; }
    }


    <Diagram style="grid-row: 2">
        <Nodes>
            @foreach (var node in nodes)
            {
                <RectangleNode Id="@node.Id" @bind-X="@node.X" @bind-Y="@node.Y">
                    <div>Hello @node.Id</div>
                </RectangleNode>
            }
        </Nodes>
        <Links>
            @foreach (var (s,t) in sources.Zip(targets, (a, b) => (a, b)))
            {
                <StraightLink Source="s" Target="t" />
            }
        </Links>
        <AutoLayoutSettings Algorithm="Layout" />
    </Diagram>
</div>

@code {
    private class Node
    {
        public string Id { get; set; }
        public double X { get; set; }
        public double Y { get; set; }
    }
    private List<Node> nodes = Enumerable.Range(0, 10).Select(i => new Node { Id = i.ToString() }).ToList();
    private List<NodeAnchor> sources = Enumerable.Range(1, 9).Select(_ => new NodeAnchor { NodeId = "0" }).ToList();
    private List<NodeAnchor> targets = Enumerable.Range(1, 9).Select(i => new NodeAnchor { NodeId = i.ToString() }).ToList();
}
